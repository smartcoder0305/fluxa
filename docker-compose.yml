version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fluxa_dev}
      POSTGRES_USER: ${POSTGRES_USER:-fluxa_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fluxa_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fluxa_user} -d ${POSTGRES_DB:-fluxa_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - docker-compose.env

  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    env_file:
      - backend/env.example
      - backend/env.${NODE_ENV:-development}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - frontend/env.example
      - frontend/env.${NODE_ENV:-development}
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data: 